{"version":3,"sources":["Person.js","PeopleTable.js","NewPerson.js","api.js","App.js","index.js"],"names":["classNames","require","Person","_ref","_classNames","person","selectedPerson","markByClick","rowClassName","person--male","sex","person--female","person--lived-more-than-65-years","age","person--father","children","person--mother","Object","defineProperty","concat","century","id","columnClassName","person--born-before-1650","born","person--died-after-1800","died","react_default","a","createElement","className","onClick","name","mother","father","defaultProps","PeopleTable","columnNames","state","personId","_this","setState","_this2","this","people","props","map","columnName","key","src_Person","React","Component","NewPerson","errorMessageByName","errorMessageByDate","addName","event","target","value","test","addSex","addBornDate","addDiedDate","addFather","addMother","handleSubmit","preventDefault","onSubmit","closeForm","_this$state","type","placeholder","required","onChange","htmlFor","disabled","getPeople","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","i","objectSpread","Math","ceil","fatherData","filter","man","motherData","woman","child","join","stop","apply","arguments","App","visiblePeople","shownForm","componentDidMount","filterBy","toLowerCase","prevState","includes","sortBy","sort","b","localeCompare","showForm","addNewPerson","newPerson","length","toConsumableArray","markedAPersonRow","src_NewPerson","src_PeopleTable","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.09ffb1de.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nconst Person = ({ person, selectedPerson, markByClick }) => {\n  const rowClassName = classNames({\n    person,\n    'person--male': person.sex === 'm',\n    'person--female': person.sex === 'f',\n    'person--lived-more-than-65-years': person.age > 65,\n    'person--father': person.sex === 'm' && person.children,\n    'person--mother': person.sex === 'f' && person.children,\n    [`person--lived-in-${person.century}`]: true,\n    'person--selected': selectedPerson === person.id,\n  });\n\n  const columnClassName = classNames({\n    'person--born-before-1650': person.born < 1650,\n    'person--died-after-1800': person.died > 1800,\n  });\n\n  return (\n    <tr\n      className={rowClassName}\n      onClick={() => markByClick(person.id)}\n    >\n      <td>{person.id}</td>\n      <td className={columnClassName}>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.age}</td>\n      <td>{person.century}</td>\n      <td>{person.mother}</td>\n      <td>{person.father}</td>\n      <td>{person.children}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.string,\n  }).isRequired,\n  selectedPerson: PropTypes.number,\n  markByClick: PropTypes.func,\n};\n\nPerson.defaultProps = {\n  selectedPerson: null,\n  markByClick: () => {},\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport './App.css';\n\nclass PeopleTable extends React.Component {\n  columnNames = [\n    'id',\n    'name',\n    'sex',\n    'born',\n    'died',\n    'age',\n    'century',\n    'father',\n    'mother',\n    'children'];\n\n  state = {\n    selectedPerson: null,\n  }\n\n  markByClick = (personId) => {\n    this.setState({\n      selectedPerson: personId,\n    });\n  };\n\n  render() {\n    const { people } = this.props;\n    const { selectedPerson } = this.state;\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr className=\"thead\">\n            {this.columnNames.map(columnName => (\n              <th key={columnName}>{columnName}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <Person\n              key={person.id}\n              person={person}\n              selectedPerson={selectedPerson}\n              markByClick={this.markByClick}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state = {\n    name: '',\n    sex: 'f',\n    born: null,\n    died: null,\n    father: '',\n    mother: '',\n    errorMessageByName: '',\n    errorMessageByDate: '',\n  }\n\n  addName = (event) => {\n    const name = event.target.value;\n    const reg = /\\d|\\W/;\n    if (reg.test(name)) {\n      this.setState({\n        errorMessageByName: 'Incorrect name. Name must contain only a-z/A-Z. ',\n      });\n    } else {\n      this.setState({\n        errorMessageByName: '',\n        name,\n      });\n    }\n  }\n\n  addSex = (event) => {\n    this.setState({ sex: event.target.value });\n  }\n\n  addBornDate = (event) => {\n    this.setState({ born: event.target.value });\n  }\n\n  addDiedDate = (event) => {\n    const died = event.target.value;\n\n    if (((died - this.state.born) < 0) || ((died - this.state.born) > 150)) {\n      this.setState({\n        errorMessageByDate: 'Incorrect born and/or died.',\n      });\n    } else {\n      this.setState({\n        died,\n        errorMessageByDate: '',\n      });\n    }\n  }\n\n  addFather = (event) => {\n    this.setState({ father: event.target.value });\n  }\n\n  addMother = (event) => {\n    this.setState({ mother: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n  };\n\n  render() {\n    const { closeForm } = this.props;\n    const { errorMessageByName, errorMessageByDate } = this.state;\n    return (\n      <div className=\"shown-form\">\n        <form\n          className=\"form-wrap\"\n          onSubmit={this.handleSubmit}\n        >\n          <input\n            id=\"new-person-name\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            className=\"input\"\n            required=\"true\"\n            onChange={this.addName}\n          />\n          <span>{errorMessageByName}</span>\n          <label\n            htmlFor=\"new-person-sex__man\"\n            className=\"radio-btn\"\n          >\n            <input\n              id=\"new-person-sex__man\"\n              type=\"radio\"\n              value=\"m\"\n              name=\"sex\"\n              onChange={this.addSex}\n            />\n            Man\n          </label>\n          <label\n            htmlFor=\"new-person-sex__woman\"\n            className=\"radio-btn\"\n          >\n            <input\n              id=\"new-person-sex__woman\"\n              type=\"radio\"\n              value=\"f\"\n              name=\"sex\"\n              onChange={this.addSex}\n            />\n            Woman\n          </label>\n          <input\n            id=\"new-person-born\"\n            type=\"text\"\n            placeholder=\"Enter the year of born\"\n            className=\"input\"\n            required=\"true\"\n            onChange={this.addBornDate}\n          />\n          <input\n            id=\"new-person-died\"\n            type=\"text\"\n            placeholder=\"Enter the year of death\"\n            className=\"input\"\n            required=\"true\"\n            onChange={this.addDiedDate}\n          />\n          <span>{errorMessageByDate}</span>\n          <input\n            id=\"new-person-father\"\n            type=\"text\"\n            placeholder=\"Enter father's name\"\n            className=\"input\"\n            required=\"true\"\n            onChange={this.addFather}\n          />\n          <input\n            id=\"new-person-mother\"\n            type=\"text\"\n            placeholder=\"Enter mother's name\"\n            className=\"input\"\n            required=\"true\"\n            onChange={this.addMother}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn-add\"\n            disabled={(errorMessageByName || errorMessageByDate)\n              ? true\n              : false\n            }\n          >\n            Add\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn-close\"\n            onClick={closeForm}\n          >\n            Close\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  closeForm: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nNewPerson.defaultProps = {\n  closeForm: () => {},\n};\n\nexport default NewPerson;\n","const getPeople = async() => {\n  const url = 'https://mate-academy.github.io/react_people-table/api';\n  const response = await fetch(`${url}/people.json`);\n  const people = await response.json();\n\n  return people\n    .map((person, i) => ({\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      id: i + 1,\n      fatherData: people.filter(man => (\n        person.father === man.name\n      )),\n      motherData: people.filter(woman => (\n        person.mother === woman.name\n      )),\n      children: people.filter(child => (\n        person.name === child.mother || person.name === child.father\n      )).map(child => child.name).join(', '),\n    }));\n};\n\nexport default getPeople;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\nimport getPeople from './api';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    value: '',\n    shownForm: false,\n  };\n\n  componentDidMount = async() => {\n    const people = await getPeople();\n    this.setState({\n      people,\n      visiblePeople: people,\n    });\n  };\n\n  filterBy = (event) => {\n    const value = event.target.value.toLowerCase();\n\n    this.setState((prevState) => {\n      const visiblePeople = prevState.people.filter(person => (\n        person.name.toLowerCase().includes(value)\n        || (person.father && person.father.toLowerCase().includes(value))\n        || (person.mother && person.mother.toLowerCase().includes(value))\n      ));\n      return {\n        visiblePeople,\n      };\n    });\n    this.setState({\n      value: event.target.value,\n    });\n  };\n\n  sortBy = (value) => {\n    if (value === 'name') {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => (\n          a[value].localeCompare(b[value])\n        )),\n      }));\n    } else {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => (\n          a[value] - b[value]\n        )),\n      }));\n    }\n  };\n\n  showForm = () => {\n    this.setState({\n      shownForm: true,\n    });\n  };\n\n  closeForm = (event) => {\n    event.preventDefault();\n    this.setState({\n      shownForm: false,\n    });\n  };\n\n  addNewPerson = (newPerson) => {\n    newPerson = {\n      ...newPerson,\n      age: newPerson.died - newPerson.born,\n      century: Math.ceil(newPerson.died / 100),\n      id: this.state.visiblePeople.length + 1,\n    };\n    this.setState(prevState => ({\n      visiblePeople: [...prevState.visiblePeople, newPerson],\n      people: [...prevState.visiblePeople, newPerson],\n      shownForm: false,\n    }));\n  }\n\n  render() {\n    const {\n      shownForm,\n      people,\n      value,\n      visiblePeople,\n      markedAPersonRow,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"submit\"\n          className=\"btn-new-person\"\n          onClick={this.showForm}\n        >\n          Add a new person\n        </button>\n        {shownForm\n        && (\n          <NewPerson\n            onSubmit={this.addNewPerson}\n            closeForm={this.closeForm}\n          />\n        )}\n        <h1>\n          People table&nbsp;\n          (\n          {people.length}\n          &nbsp;people)\n        </h1>\n        <label\n          htmlFor=\"filter\"\n          className=\"person--filter\"\n        >\n          Filter by&nbsp;\n          <input\n            id=\"filter\"\n            type=\"text\"\n            placeholder=\"enter text\"\n            value={value}\n            onChange={this.filterBy}\n          />\n        </label>\n        <div className=\"button-list\">\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('id')}\n          >\n            Sort by ID\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('name')}\n          >\n            Sort by NAME\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('born')}\n          >\n            Sort by BORN\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('died')}\n          >\n            Sort by DIED\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('age')}\n          >\n            Sort by AGE\n          </button>\n        </div>\n        <PeopleTable\n          people={visiblePeople}\n          markedAPersonRow={markedAPersonRow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}