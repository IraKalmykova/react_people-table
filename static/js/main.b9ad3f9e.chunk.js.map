{"version":3,"sources":["Person.js","PeopleTable.js","NewPerson.js","api.js","App.js","index.js"],"names":["classNames","require","Person","_ref","_classNames","person","columnNames","markedAPersonRow","markByClick","rowClassName","person--male","sex","person--female","person--lived-more-than-65-years","age","person--father","children","person--mother","Object","defineProperty","concat","century","id","columnClassName","person--born-before-1650","born","person--died-after-1800","died","react_default","a","createElement","className","onClick","map","key","PeopleTable","people","columnName","src_Person","NewPerson","showFormAddNewPerson","addNewPerson","closeForm","type","placeholder","required","value","name","getPeople","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","res","json","stop","apply","this","arguments","App","state","visiblePeople","componentDidMount","allPeopleData","sent","i","length","undefined","objectSpread","Math","ceil","mother","father","fatherData","filter","man","motherData","woman","child","join","replace","_this","setState","filterBy","event","target","toLowerCase","includes","sortBy","prevState","sort","b","localeCompare","showForm","preventDefault","_this2","_this$state","src_NewPerson","onInput","src_PeopleTable","React","Component","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.b9ad3f9e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst classNames = require('classnames');\n\nconst Person = ({ person, columnNames, markedAPersonRow, markByClick }) => {\n  const rowClassName = classNames({\n    person,\n    'person--male': person.sex === 'm',\n    'person--female': person.sex === 'f',\n    'person--lived-more-than-65-years': person.age > 65,\n    'person--father': person.sex === 'm' && person.children,\n    'person--mother': person.sex === 'f' && person.children,\n    [`person--lived-in-${person.century}`]: true,\n    'marked-person': markedAPersonRow === person.id,\n  });\n\n  const columnClassName = classNames({\n    'person--born-before-1650': person.born < 1650,\n    'person--died-after-1800': person.died > 1800,\n  });\n\n  return (\n    <tr\n      className={rowClassName}\n      onClick={markByClick}\n    >\n      {columnNames.map(key => (\n        <td\n          className={key === 'name' && columnClassName}\n          key={person[key]}\n        >\n          {person[key]}\n        </td>\n      ))}\n    </tr>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport Person from './Person';\nimport './App.css';\n\nconst PeopleTable = ({ people, markedAPersonRow, markByClick }) => {\n  const columnNames = ['id', 'name', 'sex', 'born', 'died', 'age', 'century', 'father', 'mother', 'children'];\n  return (\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr className=\"thead\">\n          {columnNames.map(columnName => (\n            <th key={columnName}>{columnName}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <Person\n            key={person.id}\n            person={person}\n            columnNames={columnNames}\n            markedAPersonRow={markedAPersonRow}\n            markByClick={() => markByClick(person.id)}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './App.css';\n\nconst NewPerson = ({ showFormAddNewPerson, addNewPerson, closeForm }) => (\n  <div className={showFormAddNewPerson ? 'shown-form' : 'hidden-form'}>\n    <form\n      className=\"form-wrap\"\n    >\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"enter name\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label className=\"radio-btn\">\n        <input\n          type=\"radio\"\n          value=\"m\"\n          name=\"sex\"\n        />\n        Man\n      </label>\n      <label className=\"radio-btn\">\n        <input\n          type=\"radio\"\n          value=\"f\"\n          name=\"sex\"\n        />\n        Woman\n      </label>\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"enter born date\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"enter died date\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"enter father's name\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label>\n        <input\n          type=\"text\"\n          placeholder=\"enter mother's name\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <button\n        type=\"submit\"\n        className=\"btn-add\"\n        onClick={addNewPerson}\n      >\n        Add\n      </button>\n      <button\n        type=\"submit\"\n        className=\"btn-close\"\n        onClick={closeForm}\n      >\n        Close\n      </button>\n    </form>\n  </div>\n);\n\nexport default NewPerson;\n","export const getPeople = async() => {\n  const url = 'https://mate-academy.github.io/react_people-table/api';\n  return fetch(`${url}/people.json`)\n    .then(res => res.json());\n};\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\nimport { getPeople } from './api';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    value: '',\n    markedAPersonRow: null,\n    showFormAddNewPerson: false,\n  };\n\n  componentDidMount = async() => {\n    const people = await getPeople();\n    const allPeopleData = people.map((person, i = 1) => ({\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      id: i + 1,\n      mother: person.mother || 'no',\n      father: person.father || 'no',\n      fatherData: people.filter(man => (\n        person.father === man.name\n      )),\n      motherData: people.filter(woman => (\n        person.mother === woman.name\n      )),\n      children: people.filter(child => (\n        person.name === child.mother || person.name === child.father\n      )).map(child => (`${child.name}, `\n      )).join('')\n        .replace(/,\\s*$/, ''),\n    }));\n\n    this.setState({\n      people: allPeopleData,\n      visiblePeople: allPeopleData,\n    });\n  };\n\n  filterBy = (event) => {\n    const value = event.target.value.toLowerCase();\n    const visiblePeople = this.state.people.filter(person => (\n      person.name.toLowerCase().includes(value)\n      || person.father.toLowerCase().includes(value)\n      || person.mother.toLowerCase().includes(value)\n    ));\n\n    this.setState({\n      value: event.target.value,\n      visiblePeople,\n    });\n  };\n\n  sortBy = (value) => {\n    if (value === 'name') {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => a[value].localeCompare(b[value])),\n      }));\n    } else {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => a[value] - b[value]),\n      }));\n    }\n  }\n\n  markByClick = (value) => {\n    this.setState({\n      markedAPersonRow: value,\n    });\n  }\n\n  showForm = () => {\n    this.setState({\n      showFormAddNewPerson: true,\n    });\n  }\n\n  closeForm = (event) => {\n    event.preventDefault();\n    this.setState({\n      showFormAddNewPerson: false,\n    });\n  }\n\n  render() {\n    const {\n      showFormAddNewPerson,\n      people,\n      value,\n      visiblePeople,\n      markedAPersonRow,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"submit\"\n          className=\"btn-new-person\"\n          onClick={this.showForm}\n        >\n          Add new person\n        </button>\n        {showFormAddNewPerson\n        && (\n          <NewPerson\n            showFormAddNewPerson={showFormAddNewPerson}\n            addNewPerson={this.addNewPerson}\n            closeForm={this.closeForm}\n          />\n        )}\n        <h1>\n          People table&nbsp;\n          (\n          {people.length}\n          &nbsp;people)\n        </h1>\n        <label className=\"person--filter\">\n          Filter by&nbsp;\n          <input\n            type=\"text\"\n            placeholder=\"enter text\"\n            value={value}\n            onInput={this.filterBy}\n          />\n        </label>\n        <div className=\"button-list\">\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('id')}\n          >\n            Sort by ID\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('name')}\n          >\n            Sort by NAME\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('born')}\n          >\n            Sort by BORN\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('died')}\n          >\n            Sort by DIED\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('age')}\n          >\n            Sort by AGE\n          </button>\n        </div>\n        <PeopleTable\n          people={visiblePeople}\n          markedAPersonRow={markedAPersonRow}\n          markByClick={this.markByClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}