{"version":3,"sources":["Person.js","PeopleTable.js","NewPerson.js","api.js","App.js","index.js"],"names":["classNames","require","Person","_ref","_classNames","person","selectedPerson","markByClick","rowClassName","person--male","sex","person--female","person--lived-more-than-65-years","age","person--father","children","person--mother","Object","defineProperty","concat","century","id","columnClassName","person--born-before-1650","born","person--died-after-1800","died","react_default","a","createElement","className","onClick","name","mother","father","defaultProps","PeopleTable","columnNames","state","personId","_this","setState","_this2","this","people","props","map","columnName","key","src_Person","React","Component","NewPerson","userMap","errorsMap","handleFieldChange","event","_event$target","target","value","prevState","objectSpread","replace","handleFormSubmit","preventDefault","onSubmit","closeForm","_this$state","type","placeholder","defaultValue","required","onChange","htmlFor","getPeople","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","i","Math","ceil","fatherData","filter","man","motherData","woman","child","join","stop","apply","arguments","App","visiblePeople","shownForm","componentDidMount","filterBy","toLowerCase","includes","sortBy","sort","b","localeCompare","showForm","addNewPerson","newPerson","length","toConsumableArray","markedAPersonRow","src_NewPerson","src_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.c7981111.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nconst Person = ({ person, selectedPerson, markByClick }) => {\n  const rowClassName = classNames({\n    person,\n    'person--male': person.sex === 'm',\n    'person--female': person.sex === 'f',\n    'person--lived-more-than-65-years': person.age > 65,\n    'person--father': person.sex === 'm' && person.children,\n    'person--mother': person.sex === 'f' && person.children,\n    [`person--lived-in-${person.century}`]: true,\n    'person--selected': selectedPerson === person.id,\n  });\n\n  const columnClassName = classNames({\n    'person--born-before-1650': person.born < 1650,\n    'person--died-after-1800': person.died > 1800,\n  });\n\n  return (\n    <tr\n      className={rowClassName}\n      onClick={() => markByClick(person.id)}\n    >\n      <td>{person.id}</td>\n      <td className={columnClassName}>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.age}</td>\n      <td>{person.century}</td>\n      <td>{person.mother}</td>\n      <td>{person.father}</td>\n      <td>{person.children}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.string,\n  }).isRequired,\n  selectedPerson: PropTypes.number,\n  markByClick: PropTypes.func,\n};\n\nPerson.defaultProps = {\n  selectedPerson: null,\n  markByClick: () => {},\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport './App.css';\n\nclass PeopleTable extends React.Component {\n  columnNames = [\n    'id',\n    'name',\n    'sex',\n    'born',\n    'died',\n    'age',\n    'century',\n    'father',\n    'mother',\n    'children'];\n\n  state = {\n    selectedPerson: null,\n  }\n\n  markByClick = (personId) => {\n    this.setState({\n      selectedPerson: personId,\n    });\n  };\n\n  render() {\n    const { people } = this.props;\n    const { selectedPerson } = this.state;\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr className=\"thead\">\n            {this.columnNames.map(columnName => (\n              <th key={columnName}>{columnName}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <Person\n              key={person.id}\n              person={person}\n              selectedPerson={selectedPerson}\n              markByClick={this.markByClick}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state = {\n    userMap: {\n      name: '',\n      sex: 'f',\n      born: null,\n      died: null,\n      father: '',\n      mother: '',\n    },\n    errorsMap: {\n      died: '',\n    },\n  };\n\n  handleFieldChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(prevState => ({\n      userMap: {\n        ...prevState.userMap,\n        [name]: (name === 'name') ? value.replace(/[^\\w|\\d]/, '') : value,\n      },\n      errorsMap: {\n        ...prevState.errorsMap,\n        [name]: '',\n      },\n    }));\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const { userMap } = this.state;\n    const { onSubmit } = this.props;\n\n    if (\n      ((userMap.died - userMap.born) < 0)\n      || ((userMap.died - userMap.born) > 150)\n    ) {\n      this.setState(prevState => ({\n        userMap: {\n          ...prevState.userMap,\n        },\n        errorsMap: {\n          ...prevState.errorsMap,\n          died: 'Incorrect the year of born and/or the year of death.',\n        },\n      }));\n    } else {\n      onSubmit(userMap);\n      this.setState(prevState => ({\n        userMap: {\n          ...prevState.userMap,\n          name: '',\n          sex: 'f',\n          born: null,\n          died: null,\n          father: '',\n          mother: '',\n        },\n      }));\n    }\n  }\n\n  render() {\n    const { closeForm } = this.props;\n    const { userMap, errorsMap } = this.state;\n    return (\n      <div className=\"shown-form\">\n        <form\n          className=\"form-wrap\"\n          onSubmit={this.handleFormSubmit}\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            defaultValue={userMap.name}\n            className=\"input\"\n            required=\"true\"\n            onChange={this.handleFieldChange}\n          />\n          <label\n            htmlFor=\"new-person-sex__man\"\n            className=\"radio-btn\"\n          >\n            <input\n              id=\"new-person-sex__man\"\n              type=\"radio\"\n              value=\"m\"\n              name=\"sex\"\n              onChange={this.handleFieldChange}\n            />\n            Man\n          </label>\n          <label\n            htmlFor=\"new-person-sex__woman\"\n            className=\"radio-btn\"\n          >\n            <input\n              id=\"new-person-sex__woman\"\n              type=\"radio\"\n              value=\"f\"\n              name=\"sex\"\n              onChange={this.handleFieldChange}\n            />\n            Woman\n          </label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter the year of born\"\n            className=\"input\"\n            name=\"born\"\n            defaultValue={userMap.born}\n            required=\"true\"\n            onChange={this.handleFieldChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter the year of death\"\n            className=\"input\"\n            name=\"died\"\n            defaultValue={userMap.died}\n            required=\"true\"\n            onChange={this.handleFieldChange}\n          />\n          {errorsMap.died && (\n            <div className=\"error\">{errorsMap.died}</div>\n          )}\n          <input\n            type=\"text\"\n            placeholder=\"Enter father's name\"\n            className=\"input\"\n            name=\"father\"\n            defaultValue={userMap.father}\n            required=\"true\"\n            onChange={this.handleFieldChange}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter mother's name\"\n            className=\"input\"\n            name=\"mother\"\n            defaultValue={userMap.mother}\n            required=\"true\"\n            onChange={this.handleFieldChange}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn-add\"\n          >\n            Add\n          </button>\n          <button\n            type=\"submit\"\n            className=\"btn-close\"\n            onClick={closeForm}\n          >\n            Close\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  closeForm: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nNewPerson.defaultProps = {\n  closeForm: () => {},\n};\n\nexport default NewPerson;\n","const getPeople = async() => {\n  const url = 'https://mate-academy.github.io/react_people-table/api';\n  const response = await fetch(`${url}/people.json`);\n  const people = await response.json();\n\n  return people\n    .map((person, i) => ({\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      id: i + 1,\n      fatherData: people.filter(man => (\n        person.father === man.name\n      )),\n      motherData: people.filter(woman => (\n        person.mother === woman.name\n      )),\n      children: people.filter(child => (\n        person.name === child.mother || person.name === child.father\n      )).map(child => child.name).join(', '),\n    }));\n};\n\nexport default getPeople;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\nimport getPeople from './api';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    value: '',\n    shownForm: false,\n  };\n\n  componentDidMount = async() => {\n    const people = await getPeople();\n    this.setState({\n      people,\n      visiblePeople: people,\n    });\n  };\n\n  filterBy = (event) => {\n    const value = event.target.value.toLowerCase();\n\n    this.setState((prevState) => {\n      const visiblePeople = prevState.people.filter(person => (\n        person.name.toLowerCase().includes(value)\n        || (person.father && person.father.toLowerCase().includes(value))\n        || (person.mother && person.mother.toLowerCase().includes(value))\n      ));\n      return {\n        visiblePeople,\n      };\n    });\n    this.setState({\n      value: event.target.value,\n    });\n  };\n\n  sortBy = (value) => {\n    if (value === 'name') {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => (\n          a[value].localeCompare(b[value])\n        )),\n      }));\n    } else {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => (\n          a[value] - b[value]\n        )),\n      }));\n    }\n  };\n\n  showForm = () => {\n    this.setState({\n      shownForm: true,\n    });\n  };\n\n  closeForm = (event) => {\n    event.preventDefault();\n    this.setState({\n      shownForm: false,\n    });\n  };\n\n  addNewPerson = (newPerson) => {\n    newPerson = {\n      ...newPerson,\n      age: newPerson.died - newPerson.born,\n      century: Math.ceil(newPerson.died / 100),\n      id: this.state.people.length + 1,\n    };\n    this.setState(prevState => ({\n      visiblePeople: [...prevState.visiblePeople, newPerson],\n      people: [...prevState.people, newPerson],\n      shownForm: false,\n    }));\n  }\n\n  render() {\n    const {\n      shownForm,\n      people,\n      value,\n      visiblePeople,\n      markedAPersonRow,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"submit\"\n          className=\"btn-new-person\"\n          onClick={this.showForm}\n        >\n          Add a new person\n        </button>\n        {shownForm\n        && (\n          <NewPerson\n            onSubmit={this.addNewPerson}\n            closeForm={this.closeForm}\n          />\n        )}\n        <h1>\n          People table&nbsp;\n          (\n          {people.length}\n          &nbsp;people)\n        </h1>\n        <label\n          htmlFor=\"filter\"\n          className=\"person--filter\"\n        >\n          Filter by&nbsp;\n          <input\n            id=\"filter\"\n            type=\"text\"\n            placeholder=\"enter text\"\n            value={value}\n            onChange={this.filterBy}\n          />\n        </label>\n        <div className=\"button-list\">\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('id')}\n          >\n            Sort by ID\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('name')}\n          >\n            Sort by NAME\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('born')}\n          >\n            Sort by BORN\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('died')}\n          >\n            Sort by DIED\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('age')}\n          >\n            Sort by AGE\n          </button>\n        </div>\n        <PeopleTable\n          people={visiblePeople}\n          markedAPersonRow={markedAPersonRow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}