{"version":3,"sources":["Person.js","PeopleTable.js","NewPerson.js","api.js","App.js","index.js"],"names":["classNames","require","Person","_ref","_classNames","person","selectedPerson","markByClick","rowClassName","person--male","sex","person--female","person--lived-more-than-65-years","age","person--father","children","person--mother","Object","defineProperty","concat","century","id","columnClassName","person--born-before-1650","born","person--died-after-1800","died","react_default","a","createElement","className","onClick","name","mother","father","defaultProps","PeopleTable","columnNames","state","personId","_this","setState","_this2","this","people","props","map","columnName","key","src_Person","React","Component","NewPerson","showFormAddNewPerson","addNewPerson","closeForm","htmlFor","type","placeholder","required","value","getPeople","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","i","objectSpread","Math","ceil","fatherData","filter","man","motherData","woman","child","join","stop","apply","arguments","App","visiblePeople","componentDidMount","filterBy","event","target","toLowerCase","prevState","includes","sortBy","sort","b","localeCompare","showForm","preventDefault","_this$state","markedAPersonRow","src_NewPerson","length","onChange","src_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.188d6528.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nconst Person = ({ person, selectedPerson, markByClick }) => {\n  const rowClassName = classNames({\n    person,\n    'person--male': person.sex === 'm',\n    'person--female': person.sex === 'f',\n    'person--lived-more-than-65-years': person.age > 65,\n    'person--father': person.sex === 'm' && person.children,\n    'person--mother': person.sex === 'f' && person.children,\n    [`person--lived-in-${person.century}`]: true,\n    'person--selected': selectedPerson === person.id,\n  });\n\n  const columnClassName = classNames({\n    'person--born-before-1650': person.born < 1650,\n    'person--died-after-1800': person.died > 1800,\n  });\n\n  return (\n    <tr\n      className={rowClassName}\n      onClick={() => markByClick(person.id)}\n    >\n      <td>{person.id}</td>\n      <td className={columnClassName}>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.age}</td>\n      <td>{person.century}</td>\n      <td>{person.mother}</td>\n      <td>{person.father}</td>\n      <td>{person.children}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    children: PropTypes.string,\n  }).isRequired,\n  selectedPerson: PropTypes.number,\n  markByClick: PropTypes.func,\n};\n\nPerson.defaultProps = {\n  selectedPerson: null,\n  markByClick: () => {},\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport './App.css';\n\nclass PeopleTable extends React.Component {\n  columnNames = [\n    'id',\n    'name',\n    'sex',\n    'born',\n    'died',\n    'age',\n    'century',\n    'father',\n    'mother',\n    'children'];\n\n  state = {\n    selectedPerson: null,\n  }\n\n  markByClick = (personId) => {\n    this.setState({\n      selectedPerson: personId,\n    });\n  };\n\n  render() {\n    const { people } = this.props;\n    const { selectedPerson } = this.state;\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <tr className=\"thead\">\n            {this.columnNames.map(columnName => (\n              <th key={columnName}>{columnName}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <Person\n              key={person.id}\n              person={person}\n              selectedPerson={selectedPerson}\n              markByClick={this.markByClick}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nconst NewPerson = ({ showFormAddNewPerson, addNewPerson, closeForm }) => (\n  <div className={showFormAddNewPerson ? 'shown-form' : 'hidden-form'}>\n    <form\n      className=\"form-wrap\"\n    >\n      <label htmlFor=\"new-person-name\">\n        <input\n          id=\"new-person-name\"\n          type=\"text\"\n          placeholder=\"enter name\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label\n        htmlFor=\"new-person-sex__man\"\n        className=\"radio-btn\"\n      >\n        <input\n          id=\"new-person-sex__man\"\n          type=\"radio\"\n          value=\"m\"\n          name=\"sex\"\n        />\n        Man\n      </label>\n      <label\n        htmlFor=\"new-person-sex__woman\"\n        className=\"radio-btn\"\n      >\n        <input\n          id=\"new-person-sex__woman\"\n          type=\"radio\"\n          value=\"f\"\n          name=\"sex\"\n        />\n        Woman\n      </label>\n      <label htmlFor=\"new-person-born\">\n        <input\n          id=\"new-person-born\"\n          type=\"text\"\n          placeholder=\"enter born date\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label htmlFor=\"new-person-died\">\n        <input\n          id=\"new-person-died\"\n          type=\"text\"\n          placeholder=\"enter died date\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label htmlFor=\"new-person-father\">\n        <input\n          id=\"new-person-father\"\n          type=\"text\"\n          placeholder=\"enter father's name\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <label htmlFor=\"new-person-mother\">\n        <input\n          id=\"new-person-mother\"\n          type=\"text\"\n          placeholder=\"enter mother's name\"\n          className=\"input\"\n          required=\"true\"\n        />\n      </label>\n      <button\n        type=\"submit\"\n        className=\"btn-add\"\n        onClick={addNewPerson}\n      >\n        Add\n      </button>\n      <button\n        type=\"submit\"\n        className=\"btn-close\"\n        onClick={closeForm}\n      >\n        Close\n      </button>\n    </form>\n  </div>\n);\n\nNewPerson.propTypes = {\n  showFormAddNewPerson: PropTypes.bool,\n  addNewPerson: PropTypes.func,\n  closeForm: PropTypes.func,\n};\n\nNewPerson.defaultProps = {\n  showFormAddNewPerson: false,\n  addNewPerson: () => {},\n  closeForm: () => {},\n};\n\nexport default NewPerson;\n","const getPeople = async() => {\n  const url = 'https://mate-academy.github.io/react_people-table/api';\n  const response = await fetch(`${url}/people.json`);\n  const people = await response.json();\n\n  return people\n    .map((person, i) => ({\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      id: i + 1,\n      fatherData: people.filter(man => (\n        person.father === man.name\n      )),\n      motherData: people.filter(woman => (\n        person.mother === woman.name\n      )),\n      children: people.filter(child => (\n        person.name === child.mother || person.name === child.father\n      )).map(child => child.name).join(', '),\n    }));\n};\n\nexport default getPeople;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\nimport NewPerson from './NewPerson';\nimport getPeople from './api';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    value: '',\n    showFormAddNewPerson: false,\n  };\n\n  componentDidMount = async() => {\n    const people = await getPeople();\n    this.setState({\n      people,\n      visiblePeople: people,\n    });\n  };\n\n  filterBy = (event) => {\n    const value = event.target.value.toLowerCase();\n\n    this.setState((prevState) => {\n      const visiblePeople = prevState.people.filter(person => (\n        person.name.toLowerCase().includes(value)\n        || (person.father && person.father.toLowerCase().includes(value))\n        || (person.mother && person.mother.toLowerCase().includes(value))\n      ));\n      return {\n        visiblePeople,\n      };\n    });\n    this.setState({\n      value: event.target.value,\n    });\n  };\n\n  sortBy = (value) => {\n    if (value === 'name') {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => (\n          a[value].localeCompare(b[value])\n        )),\n      }));\n    } else {\n      this.setState(prevState => ({\n        visiblePeople: prevState.visiblePeople.sort((a, b) => (\n          a[value] - b[value]\n        )),\n      }));\n    }\n  };\n\n  showForm = () => {\n    this.setState({\n      showFormAddNewPerson: true,\n    });\n  }\n\n  closeForm = (event) => {\n    event.preventDefault();\n    this.setState({\n      showFormAddNewPerson: false,\n    });\n  }\n\n  render() {\n    const {\n      showFormAddNewPerson,\n      people,\n      value,\n      visiblePeople,\n      markedAPersonRow,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"submit\"\n          className=\"btn-new-person\"\n          onClick={this.showForm}\n        >\n          Add a new person\n        </button>\n        {showFormAddNewPerson\n        && (\n          <NewPerson\n            showFormAddNewPerson={showFormAddNewPerson}\n            addNewPerson={this.addNewPerson}\n            closeForm={this.closeForm}\n          />\n        )}\n        <h1>\n          People table&nbsp;\n          (\n          {people.length}\n          &nbsp;people)\n        </h1>\n        <label\n          htmlFor=\"filter\"\n          className=\"person--filter\"\n        >\n          Filter by&nbsp;\n          <input\n            id=\"filter\"\n            type=\"text\"\n            placeholder=\"enter text\"\n            value={value}\n            onChange={this.filterBy}\n          />\n        </label>\n        <div className=\"button-list\">\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('id')}\n          >\n            Sort by ID\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('name')}\n          >\n            Sort by NAME\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('born')}\n          >\n            Sort by BORN\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('died')}\n          >\n            Sort by DIED\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button-sort\"\n            onClick={() => this.sortBy('age')}\n          >\n            Sort by AGE\n          </button>\n        </div>\n        <PeopleTable\n          people={visiblePeople}\n          markedAPersonRow={markedAPersonRow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}